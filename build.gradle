plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}

bootJar{
    archiveFileName = "${rootProject.name}.jar"
    archiveVersion = "0.0.1"
}

group = 'org.backend.board'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}


jar {
    manifest {
        attributes 'Main-Class': 'org.backend.board.BackendApplication' // 여기에 메인 클래스의 패키지 경로와 클래스 이름을 지정합니다.
    }
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // 기본 스타터 팩
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    // mustache 화면 구성
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // Spring Data JPA & session
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.session:spring-session-jdbc'

    // Oauth + jwt
    implementation 'org.springframework.boot:spring-boot-starter-security' // 추가
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // 추가

    // Lombok
    compileOnly 'org.projectlombok:lombok'

    // mariaDB database
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    // H2 DataBase
    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.springframework.security:spring-security-test"
    testCompileOnly 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
